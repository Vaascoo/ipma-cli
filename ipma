#!/usr/bin/env python3
from api import wrapper
from typing import Optional
import fire

api = wrapper.IPMA()
CACHE = "/tmp/ipma.json"

def parse_when(input_: str) -> Optional[wrapper.IPMA.When]:
    match input_.lower():
        case "today":
            return wrapper.IPMA.When.TODAY
        case "tomorrow":
            return wrapper.IPMA.When.TOMORROW
        case "after_tomorrow":
            return wrapper.IPMA.When.AFTER_TOMORROW
    return None

def list_locations():
    return list(map(lambda s: s["local"], api.list_locations()["data"]))

def get_weather(city: str, when: str):
    if (when_enum := parse_when(when)) is None:
        return "'when' must be one of the following: 'today', 'tomorrow', 'after_tomorrow'"
    query = list(filter(lambda s: s["local"].lower() == city.lower(), api.list_locations()["data"]))
    if len(query) == 0: return f"No such city as {city}"
    id = query[0]["globalIdLocal"]
    data = list(filter(lambda s: s["globalIdLocal"] == id, api.daily_report(when_enum)["data"]))[0]
    data["when"] = when
    return data

if __name__ == "__main__":
    fire.Fire({
        "weather": get_weather,
        "list": list_locations
    })
